{% extends "_layouts/site" %}

{% block main %}

{% set target = craft.request.getParam('near') %}
{% set coords = craft.smartMap.lookupCoords(target) %}

{% set sharedOptions = {
height: 600,
draggable: true,
center: coords,
markerInfo: '_includes/map/bubble',
markerOptions: {
icon: {
url: '/assets/images/can-small.png',
scaledSize: 'new google.maps.Size(32,32)'
}
},
infoWindowOptions: {
maxWidth: 200
}
} %}

{% if target %}
{% set params = {
target: target,
range: 20
} %}
{% set locations = craft.entries.section(['venues', 'shops']).address(params).order('distance').all() %}
{% set customOptions = {
center: coords,
zoom: 12,
} %}
{% else %}
{% set locations = craft.entries.section(['venues', 'shops']).all() %}

{% if currentSite.handle == 'uk' %}
{% set customOptions = {
center: {'lat':51.525114, 'lng':-0.079938},
zoom: 14,
} %}
{% elseif currentSite.handle == "usa" %}
{% set customOptions = {
center: {'lat':40.715525, 'lng':-73.965768},
zoom: 12,
} %}
{% else %}
{% set customOptions = {
center: {'lat':51.525114, 'lng':-0.079938},
zoom: 14,
} %}
{% endif %}

{% endif %}


{% set options = sharedOptions|merge(customOptions) %}

<div class="grid-x">
  <div class="small-12 cell">
    {{ craft.smartMap.map(locations, options) }}
  </div>
</div>

{# Loop through location entries #}

{% for entry in locations %}

    {#
      Perform custom logic
      to determine which icon
      will be assigned to each entry
    #}
    {% switch entry.locationType %}
        {% case 'venue' %}
            {% set icon = '/assets/images/can-small.png' %}
        {% case 'shop' %}
            {% set icon = '/assets/images/bag.png' %}
        {% default %}
            {% set icon = '/assets/images/can-small.png' %}
    {% endswitch %}

    {# JS: Change marker icon #}
    {% js %}

        var markerId = 'smartmap-mapcanvas-1.{{ entry.id }}.address';
        smartMap.marker[markerId].setOptions(
            {icon: {
                url: '{{ icon }}',
                scaledSize: new google.maps.Size(32,32)
            }}
        );

    {% endjs %}

{% endfor %}

{#
<section class="padding-top-3">
<div class="grid-container">
  <div class="grid-x grid-padding-x grid-padding-y">
    <div class="small-12 cell">
      <form action="" method="GET">
        
                <div class="input-group">
                  
                  <input class="input-group-field" name="near" type="text" placeholder="Where are you?">
                  
                  <div class="input-group-button">
                    <button type="submit" class="button postfix" name="subscribe" value="Submit">
                      <svg class="icon icon-arrow_forward"><use xlink:href="/assets/icons/symbol-defs.svg#icon-arrow_forward"></use></svg>
                    </button>
                  </div>
                </div>
                
      </form>
    </div>
  </div>
</div>
</section>
#}

<div class="grid-container">
  <div class="grid-x padding-top-2">
    <div class="small-12 cell text-center text-uppercase">
      <h3>Venues</h3>
    </div>
  </div>
</div>

<div class="grid-container">
  <div class="grid-x grid-padding-x grid-padding-y small-up-1 medium-up-2 large-up-3 padding-top-2 padding-bottom-2">
  
{% set entries = craft.entries
.section('venues')
.order('title asc')
.all() %}

    {% for entry in entries %}
    <div class="cell">
    <h5 class="text-uppercase">{{ entry.title }}</h5>
    <h6>{{ entry.address.street1 }}<h6>
    <h6>{{ entry.address.city }}, {{ entry.address.zip }}<h6>
    </div>
    {% endfor %}
  </div>
</div>

<div class="grid-container">
  <div class="grid-x">
    <div class="small-12 cell text-center text-uppercase">
      <h3>Shops</h3>
    </div>
  </div>
</div>

<div class="grid-container">
  <div class="grid-x grid-padding-x grid-padding-y small-up-1 medium-up-2 large-up-3 padding-top-2 padding-bottom-2">
  
{% set entries = craft.entries
.section('shops')
.order('title asc')
.all() %}

    {% for entry in entries %}
    <div class="cell">
    <h5 class="text-uppercase">{{ entry.title }}</h5>
    <h6>{{ entry.address.street1 }}<h6>
    <h6>{{ entry.address.city }}, {{ entry.address.zip }}<h6>
    </div>
    {% endfor %}
  </div>
</div>

{% js %}

$(function () {
        var styles = [
 {
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#f5f5f5"
     }
   ]
 },
 {
   "elementType": "geometry.stroke",
   "stylers": [
     {
       "color": "#242965"
     },
     {
       "saturation": 5
     },
     {
       "weight": 2
     }
   ]
 },
 {
   "elementType": "labels.icon",
   "stylers": [
     {
       "color": "#272a67"
     },
     {
       "visibility": "off"
     }
   ]
 },
 {
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#272a67"
     },
     {
       "saturation": -5
     }
   ]
 },
 {
   "elementType": "labels.text.stroke",
   "stylers": [
     {
       "saturation": -90
     }
   ]
 },
 {
   "featureType": "administrative.land_parcel",
   "elementType": "labels",
   "stylers": [
     {
       "visibility": "off"
     }
   ]
 },
 {
   "featureType": "administrative.land_parcel",
   "elementType": "labels.text",
   "stylers": [
     {
       "color": "#242965"
     }
   ]
 },
 {
   "featureType": "administrative.land_parcel",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#242965"
     }
   ]
 },
 {
   "featureType": "poi",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#eeeeee"
     }
   ]
 },
 {
   "featureType": "poi",
   "elementType": "labels.text",
   "stylers": [
     {
       "visibility": "off"
     }
   ]
 },
 {
   "featureType": "poi",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#757575"
     }
   ]
 },
 {
   "featureType": "poi.park",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#e5e5e5"
     }
   ]
 },
 {
   "featureType": "poi.park",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#9e9e9e"
     }
   ]
 },
 {
   "featureType": "road",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#ffffff"
     }
   ]
 },
 {
   "featureType": "road.arterial",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#757575"
     }
   ]
 },
 {
   "featureType": "road.highway",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#dadada"
     }
   ]
 },
 {
   "featureType": "road.highway",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#616161"
     }
   ]
 },
 {
   "featureType": "road.local",
   "elementType": "labels",
   "stylers": [
     {
       "visibility": "off"
     }
   ]
 },
 {
   "featureType": "road.local",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#9e9e9e"
     }
   ]
 },
 {
   "featureType": "transit.line",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#e5e5e5"
     }
   ]
 },
 {
   "featureType": "transit.station",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#eeeeee"
     }
   ]
 },
 {
   "featureType": "water",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#c9c9c9"
     }
   ]
 },
 {
   "featureType": "water",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#9e9e9e"
     }
   ]
 }
];
        smartMap.styleMap('smartmap-mapcanvas-1', styles);
    });
{% endjs %}

{% endblock %}