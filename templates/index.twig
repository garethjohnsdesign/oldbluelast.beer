{% extends "_layouts/site" %}

{% block main %}

<div class="full reveal" id="exampleModal8" data-reveal>
  <p>OH I'M SO FUUUUL</p>
  <img src="https://placekitten.com/1920/1280" alt="Introspective Cage">
  <button class="close-button" data-close aria-label="Close reveal" type="button">
    <span aria-hidden="true">&times;</span>
  </button>
</div>

{# Hero #}
<section class="home__hero">

      <div class="grid-container">
        <div class="grid-x grid-padding-x grid-padding-y">
          
            <div class="small-12 medium-6 xxlarge-6 cell text-uppercase">
            <div id="heroTimeline">
              <h1>A</h1>
              <h1>Beer</h1>
              <h1 class="hero-one hero__text">Website</h1>
              <h1 class="hero-two hero__text">Website</h1>
              <h1 class="hero-three hero__text">Website</h1>
            </div>
          </div>
          
          <div class="small-12 medium-6 large-5 cell align-self-middle">
            {{entry.heroText}}
            <a class="underline text-uppercase" data-toggle="exampleModal8">Learn More</a>
          </div>
          
        </div>
      </div>      
      <div class="home__hero__cans"></div>
    
</section>
{# End Hero #}

{# Photos #}
<section class="home__recent-events inverted">
    
    <div class="grid-container">
      <div class="grid-x grid-padding-x grid-padding-y">
        <div class="small-12 cell text-uppercase">
          <h1 id="photos-word">Event</h1>
          <h1>Photos</h1>
        </div>
      </div>
    </div>
    
    <div class="grid-x small-up-1 medium-up-3 large-up-3">
      
        {% set evententries = craft.entries
        .section('events')
        .eventFeatured('1')
        .eventDate('<' ~ now.getTimestamp())
        .order('eventDate desc')
        .all() %}
        
        {% for entry in evententries %}
        <div class="cell">
          <div class="excerpt">
            <a href="{{ entry.url}}">
              
              <div class="grid-x excerpt__title align-middle">
                <div class="small-12 cell text-center padding-3">
                  <h5>{{ entry.title}} @ {{ entry.eventVenue}}</h5>
                </div>
              </div>
              
              <div class="excerpt__image">
                {% for asset in entry.eventThumb %}
                <img src="{{ asset.getUrl('thumb') }}" width="{{ asset.getWidth('thumb') }}" height="{{ asset.getHeight('thumb') }}">
                {% endfor %}
              </div>
            
            </a>
          </div>
        </div>
        {% endfor %}
        
    </div>
</section>
{# End Photos #}

{# Upcoming Events #}
<section class="home__upcoming-events padding-top-3">

  <div class="grid-container">
    <div class="grid-x grid-padding-x grid-padding-y">
      <div class="small-12 cell text-uppercase">
        <h1>Upcoming</h1>
        <h1 id="events-word">Events</h1>        
      </div>
    </div>
  </div>

  <ul class="vertical menu home__upcoming-events__list">
            
  {% set entries = craft.entries
  .section('events')
  .eventDate('>' ~ now.getTimestamp())
  .order('eventDate asc')
  .all() %}
  
  {% for entry in entries %}
    <li>
  	  <a href="{{ entry.eventLink}}" class="padding-left-0 padding-top-2 padding-bottom-1" target="_blank">
  	  
  	    <div class="grid-container">
          <div class="grid-x grid-padding-x">
          
            <div class="small-12 medium-8 cell text-uppercase">
              <h6>{{ entry.eventDate | date('D j M') }}</h6>
              <h5>{{ entry.title}} @ {% if entry.eventVenue|length %}{{ entry.eventVenue }},{% endif %} {{ entry.eventLocation }}</h5>
            </div>
            
            <div class="small-12 medium-4 cell text-uppercase text-left medium-text-right align-self-bottom margin-bottom-1">
              <span class="underline">Event Page</span>
            </div>
          
          </div>
        </div>
  	  
  	  </a>
    </li>
   {% endfor %}
  </ul>
  
</section>
{# End Upcoming Events #}

{# Location #}
<section class="home__recent-events inverted padding-top-2">
  <div class="grid-container">
    <div class="grid-x grid-padding-x grid-padding-y">
      <div class="small-12 cell text-uppercase">
        <h1>Find Beer</h1>
      </div>
    </div>  
  </div>
</section>

{% set target = craft.request.getParam('near') %}
{% if target %}
    {% set params = {
        target: target,
        range: 500
    } %}
    {% set locations = craft.entries.section('locations').address(params).order('distance').all() %}
{% else %}
    {% set locations = craft.entries.section('locations').all() %}
{% endif %}

{% set options = {
    height: 500,
    zoom: 14,
    draggable: true,
    center: {'lat':51.525114, 'lng':-0.079938},
    markerInfo: '_includes/map/bubble',
    markerOptions: {
        icon: {
            url: 'images/global/can-small.png',
            scaledSize: 'new google.maps.Size(32,32)'
        }
    },
    infoWindowOptions: {
        maxWidth: 200
    }
} %}

<section class="home__map">
  <div class="grid-x">
    <div class="small-12 cell">
      {{ craft.smartMap.map(locations, options) }}
    </div>
  </div>
</section>

{% js %}
$(function () {
        var styles = [
 {
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#f5f5f5"
     }
   ]
 },
 {
   "elementType": "geometry.stroke",
   "stylers": [
     {
       "color": "#242965"
     },
     {
       "saturation": 5
     },
     {
       "weight": 2
     }
   ]
 },
 {
   "elementType": "labels.icon",
   "stylers": [
     {
       "color": "#272a67"
     },
     {
       "visibility": "off"
     }
   ]
 },
 {
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#272a67"
     },
     {
       "saturation": -5
     }
   ]
 },
 {
   "elementType": "labels.text.stroke",
   "stylers": [
     {
       "saturation": -90
     }
   ]
 },
 {
   "featureType": "administrative.land_parcel",
   "elementType": "labels",
   "stylers": [
     {
       "visibility": "off"
     }
   ]
 },
 {
   "featureType": "administrative.land_parcel",
   "elementType": "labels.text",
   "stylers": [
     {
       "color": "#242965"
     }
   ]
 },
 {
   "featureType": "administrative.land_parcel",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#242965"
     }
   ]
 },
 {
   "featureType": "poi",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#eeeeee"
     }
   ]
 },
 {
   "featureType": "poi",
   "elementType": "labels.text",
   "stylers": [
     {
       "visibility": "off"
     }
   ]
 },
 {
   "featureType": "poi",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#757575"
     }
   ]
 },
 {
   "featureType": "poi.park",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#e5e5e5"
     }
   ]
 },
 {
   "featureType": "poi.park",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#9e9e9e"
     }
   ]
 },
 {
   "featureType": "road",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#ffffff"
     }
   ]
 },
 {
   "featureType": "road.arterial",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#757575"
     }
   ]
 },
 {
   "featureType": "road.highway",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#dadada"
     }
   ]
 },
 {
   "featureType": "road.highway",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#616161"
     }
   ]
 },
 {
   "featureType": "road.local",
   "elementType": "labels",
   "stylers": [
     {
       "visibility": "off"
     }
   ]
 },
 {
   "featureType": "road.local",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#9e9e9e"
     }
   ]
 },
 {
   "featureType": "transit.line",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#e5e5e5"
     }
   ]
 },
 {
   "featureType": "transit.station",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#eeeeee"
     }
   ]
 },
 {
   "featureType": "water",
   "elementType": "geometry",
   "stylers": [
     {
       "color": "#c9c9c9"
     }
   ]
 },
 {
   "featureType": "water",
   "elementType": "labels.text.fill",
   "stylers": [
     {
       "color": "#9e9e9e"
     }
   ]
 }
];
        smartMap.styleMap('smartmap-mapcanvas-1', styles);
    });
{% endjs %}
{% endblock %}